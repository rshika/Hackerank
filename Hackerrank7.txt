import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;



class Result {

    /*
     * Complete the 'pthFactor' function below.
     *
     * The function is expected to return a LONG_INTEGER.
     * The function accepts following parameters:
     *  1. LONG_INTEGER n
     *  2. LONG_INTEGER p
     */

    public static long pthFactor(long n, long p) {
        // Write your code here
        int s= (int)n;
        int pos= (int)p;
        int[] a =new int[s];
        int i=1;
        int j=0;
        while(i<=s){
            if(s%i==0){
                a[j]=i;
                ++j;
            }
            ++i;
        }
        for(i=j+1;i<s-1;i++){
            a[i]=0;
        }
        long r=(long)a[pos-1];
        return(r);
    
    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        long n = Long.parseLong(bufferedReader.readLine().trim());

        long p = Long.parseLong(bufferedReader.readLine().trim());

        long result = Result.pthFactor(n, p);

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}