import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;


class Result {

    /*
     * Complete the 'isPangram' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts STRING_ARRAY pangram as parameter.
     */

    public static String isPangram(List<String> pangram) {
    // Write your code here
    String ans = "";
    int i,j,k,size = pangram.size(),index = 0,flag = 1;
    boolean[] alphaList = new boolean[26];
    for(i=0;i<size;i++)
    {
        for(j=0;j<pangram.get(i).length();j++)
        {
            if( pangram.get(i).charAt(j) >= 'a' &&  pangram.get(i).charAt(j) <= 'z')
            {
                index = pangram.get(i).charAt(j) - 'a'; 
            }
            alphaList[index] = true;
        }
        for (k = 0; k <= 25; k++) 
        {
            if (alphaList[k] == false)
            {
                flag = 0;
            }
        }
        if (flag == 0)
            ans = ans + '0';
        else
            ans = ans + '1';
    }
    return ans;
    }

}
public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int pangramCount = Integer.parseInt(bufferedReader.readLine().trim());

        List<String> pangram = IntStream.range(0, pangramCount).mapToObj(i -> {
            try {
                return bufferedReader.readLine();
            } catch (IOException ex) {
                throw new RuntimeException(ex);
            }
        })
            .collect(toList());

        String result = Result.isPangram(pangram);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}